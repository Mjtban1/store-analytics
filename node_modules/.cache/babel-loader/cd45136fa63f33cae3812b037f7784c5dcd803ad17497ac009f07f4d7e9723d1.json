{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport{initializeApp}from\"firebase/app\";import{getFirestore}from\"firebase/firestore\";import{getMessaging,getToken}from\"firebase/messaging\";import{getAuth,signInAnonymously}from\"firebase/auth\";// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig={apiKey:process.env.REACT_APP_FIREBASE_API_KEY,authDomain:process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,projectId:process.env.REACT_APP_FIREBASE_PROJECT_ID,storageBucket:process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,messagingSenderId:process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,appId:process.env.REACT_APP_FIREBASE_APP_ID};// Initialize Firebase\nconst app=initializeApp(firebaseConfig);export const auth=getAuth(app);export const db=getFirestore(app);export const messaging=getMessaging(app);export const initializeMessaging=async()=>{try{const auth=getAuth();await signInAnonymously(auth);const user=auth.currentUser;const idToken=await user.getIdToken();const currentToken=await getToken(messaging,{vapidKey:process.env.REACT_APP_FIREBASE_VAPID_KEY,token:idToken});if(!currentToken)throw new Error('No FCM token received');console.log('FCM Token:',currentToken);return currentToken;}catch(error){console.error(\"Error in initializeMessaging:\",error);throw error;}};export const sendCustomNotification=async(title,body)=>{try{const auth=getAuth();const user=auth.currentUser;if(!user){await signInAnonymously(auth);}const idToken=await auth.currentUser.getIdToken();const response=await fetch('/api/send-notification',{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${idToken}`},body:JSON.stringify({title,body})});if(!response.ok)throw new Error('Failed to send notification');return true;}catch(error){console.error('Error sending notification:',error);throw error;}};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}